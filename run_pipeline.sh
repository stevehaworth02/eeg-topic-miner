#!/usr/bin/env bash
set -euo pipefail
#
#   run_pipeline.sh  â€“Â Oneâ€‘shot driver for BricksÂ 1â€‘4
#   â€¢ Creates .venv (3.11) if missing
#   â€¢ Installs/updates requirements (pins numpy<2)
#   â€¢ Runs harvest_pubmed.py  âžœ data/pmids.json         (Brickâ€¯1)
#   â€¢ Runs fetch_abstracts.py âžœ data/raw.jsonl          (Brickâ€¯2)
#   â€¢ Runs preprocess_tokenize.py âžœ data/tokenised/     (Brickâ€¯3)
#   â€¢ Runs train.py             âžœ models/scibert_best/ (Brickâ€¯4)
#

PY=python3.11               # ensure 3.11 is on PATH
VENV=.venv

echo "â–¶ checking virtualâ€‘env â€¦"
if [[ ! -d "$VENV" ]]; then
  "$PY" -m venv "$VENV"
fi
source "$VENV/bin/activate"

echo "â–¶ installing requirements â€¦"
pip install -U pip
pip install -r requirements.txt "numpy<2" numexpr

# --- sanityâ€‘check ENV creds ----------------------------------------------------
[[ -f .env ]] && source .env
: "${ENTREZ_EMAIL?Need ENTREZ_EMAIL in .env}"
: "${NCBI_API_KEY?Need NCBI_API_KEY in .env}"

# -----------------------------------------------------------------------------#
# BrickÂ 1 â€“ Harvest PMIDs
# -----------------------------------------------------------------------------#
if [[ ! -f data/pmids.json ]]; then
  echo "â–¶ BrickÂ 1: harvesting PMIDs â€¦"
  python src/harvest_pubmed.py \
         --query_file config/queries.txt \
         --out data/pmids.json
else
  echo "âœ“ BrickÂ 1: data/pmids.json already exists â€“ skipping"
fi

# -----------------------------------------------------------------------------#
# BrickÂ 2 â€“ Fetch abstracts
# -----------------------------------------------------------------------------#
if [[ ! -f data/raw.jsonl ]]; then
  echo "â–¶ BrickÂ 2: fetching abstracts â€¦"
  python src/fetch_abstracts.py \
         --pmid_json data/pmids.json \
         --out_jsonl data/raw.jsonl \
         --workers 8
else
  echo "âœ“ BrickÂ 2: data/raw.jsonl already exists â€“ skipping"
fi

# -----------------------------------------------------------------------------#
# BrickÂ 3 â€“ Tokenise + label flags
# -----------------------------------------------------------------------------#
if [[ ! -d data/tokenised ]]; then
  echo "â–¶ BrickÂ 3: tokenising dataset â€¦"
  python src/preprocess_tokenize.py \
         --raw_jsonl data/raw.jsonl \
         --out_dir  data/tokenised \
         --workers 8
else
  echo "âœ“ BrickÂ 3: data/tokenised/ already exists â€“ skipping"
fi

# -----------------------------------------------------------------------------#
# BrickÂ 4 â€“ Fineâ€‘tune SciBERT
# -----------------------------------------------------------------------------#
echo "â–¶ BrickÂ 4: launching Ray Tune sweep â€¦"
python src/train.py \
       --data_dir data/tokenised \
       --out_dir  models/scibert_best

echo "ðŸŽ‰  Pipeline finished â€“ model in models/scibert_best/"
